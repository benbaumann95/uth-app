<div class="container">
  <% if current_user[:photo] == nil  %>
    <h1>*********************</h1>
    <h1> Please upload a profile photo</h1>
    <%= render 'edit_form' %>
  <% else %>
    <% if @ticket.errors.any? %>
      <ul>
        <% @ticket.errors.full_messages.each do |message| %>
        <li><%= message %></li>
        <% end %>
      </ul>
    <% end %>

    <div class="container" style="color: black;">
      <%= form_tag(new_ticket_path, method: 'get', class: 'list-ticket-form') do %>
        <%= text_field_tag :search_event, params[:search_event], placeholder: "Check if your event exists...", class: "form-control" %>
        <%= submit_tag 'Find My Event', search_event: nil, class: "btn btn-primary" %>
        <%= link_to "Can't Find Your Event?", new_event_path %>
      <% end %>

      <div class="search-results">
        <% if @events != nil %>
          <% @events.each do |event| %>
            <h3><%= event.name %> @ <%= event.address %></h3>
            <li><%= event.category %></li>
            <li><%= event.date_and_time %><%= link_to "(My event is on another date)", new_event_path %></li>

            <% if event.quantity == 0 %>
              <li>Tickets for this event have sold out!</li>
            <% else %>
              <li><%= event.quantity %> tickets are currently listed</li>
            <% end %>

            <%= render 'list_ticket_form', event: event, ticket: @ticket %>

          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>
</div>



<!-- Include AlgoliaSearch JS Client and autocomplete.js library -->
<script src="https://cdn.jsdelivr.net/algoliasearch/3/algoliasearch.min.js"></script>
<script src="https://cdn.jsdelivr.net/autocomplete.js/0/autocomplete.min.js"></script>
<!-- Initialize autocomplete menu -->
<script>
var client = algoliasearch('34J3CD22N1', 'a3c9a51b10d2e20663956f322782527f');
var index = client.initIndex('Event');
//initialize autocomplete on search input (ID selector must match)
autocomplete('#search_event', { hint: false }, {
  source: autocomplete.sources.hits(index, { hitsPerPage: 5 }),
  //value to be displayed in input control after user's suggestion selection
  displayKey: 'name',
  //hash of templates used when rendering dataset
  templates: {
    //'suggestion' templating function used to render a single suggestion
    suggestion: function(suggestion) {
      return '<span>' +
        suggestion._highlightResult.name.value ;
    }
  }
});
</script>

